@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

/* :root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
} */

@layer utilities {
  .truncate-lines-1 {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .truncate-lines-2 {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .truncate-lines-3 {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  .truncate-lines-4 {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 4;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  .flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
  }
}
/*
.text-truncate-1 {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  overflow: hidden;
  -webkit-line-clamp: 1;
}
.text-truncate {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
  overflow: hidden;
  text-overflow: ellipsis;
}
*/

body {
  overscroll-behavior: none;
  -webkit-tap-highlight-color: transparent;
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(to bottom, transparent, rgb(var(--background-end-rgb))) rgb(var(--background-start-rgb));
}

.transition1 * {
  transition: 0.3s all ease;
}

.transitionDelayed {
  transition-delay: 0.2s;
}

@media (max-width: 639px) {
  .md2\:px-0 {
    padding-left: 0 !important;
    padding-right: 0 !important;
  }
  .md2\:h-full {
    height: 100% !important;
  }
}

.scrollbar-none::-webkit-scrollbar {
  display: none;
}

.appScreen {
  min-height: calc(100vh - 103px);
}

@media screen and (min-width: 638px) {
  .appScreen {
    min-height: calc(100vh - 50px);
  }
}

.ripple-button {
  border: none;
  overflow: hidden;
  position: relative;
  height: fit-content;
  border-radius: 9999px;
}

.ripple {
  z-index: 9999;
  width: 20px;
  height: 20px;
  position: absolute;
  display: block;
  content: "";
  border-radius: 9999px;
  opacity: 1;
  animation: 0.9s ease 1 forwards ripple-effect;
}

@keyframes ripple-effect {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(10);
    opacity: 0.375;
  }
  100% {
    transform: scale(35);
    opacity: 0;
  }
}

.ripple-button > .content {
  position: relative;
  z-index: 2;
}

.quill > * {
  border-color: inherit !important;
  color: inherit !important;
}
.quill > .ql-toolbar {
  /* border radius of the toolbar */
  border-radius: 10px 10px 0 0;
}
.quill > .ql-container {
  /* border radius of the container and for font size*/
  font-size: inherit;
  border-radius: 0 0 10px 10px;
  min-height: 20vh !important;
}
.ql-toolbar.ql-snow .ql-picker-label {
  color: inherit !important;
  opacity: 0.76;
}
.ql-snow .ql-picker {
  color: inherit !important;
}
.quill > .ql-container > .ql-editor.ql-blank::before {
  /* for placeholder */
  color: inherit;
}
.ql-snow.ql-toolbar button svg {
  opacity: 0.76;
  color: currentColor;
}
.ql-snow .ql-stroke {
  /* for the border of the editor */
  stroke: currentColor !important;
}
.ql-snow .ql-fill {
  /* for the bg color */
  fill: currentColor !important;
}
.ql-picker-item {
  /* for dropdown */
  color: #444 !important;
}

.rti--container {
  background-color: transparent !important;
  border-radius: 10px !important;
}

.ql-editor.mx-auto.mt-6.sm\:mt-2 a {
  text-decoration: underline;
  color: #0074ff;
}

.SpinnerSmall {
  border: 3px solid #f3f3f3;
  border-top: 3px solid #2b2e2fdb;
  border-radius: 50%;
  width: 20px;
  height: 20px;
  z-index: 10;
  animation: spin 1s linear infinite;
}
.Spinner {
  border: 10px solid #f3f3f3;
  border-top: 10px solid #2b2e2fdb;
  border-radius: 50%;
  width: 80px;
  height: 80px;
  z-index: 10;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* for textarea span */
/* .textAreaSpan[contenteditable]:empty::before {
  content: "Placeholder still possible";
  color: gray;
} */
